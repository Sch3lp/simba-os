#database.dialect=${simba.database.dialect}
#database.driver=${simba.database.driver}
#database.url=${simba.database.url}
#database.username=${simba.database.username}
#database.password=${simba.database.password}
#
#

# Configure the entry to use in the JAAS login.conf file for credential validation.
simba.jaas.login.conf.entry=simbaJAAS

# Configure how sessions should be archived after expiration.
# Valid values are:
#    * noSessionArchive       : Sessions will not be archived
#    * databaseSessionArchive : Sessions will be archived in the default database in
#                               the SIMBA_ARCHIVED_SESSION table.
# If you want your own way of archiving sessions, you can achieve this by writing a
# custom spring bean implementing the org.simbasecurity.core.service.ArchiveSessionService
# interface. Annotate the bean @Service("yourCustomName"), and that way you can use the
# 'yourCustomName' string here to configure it.
simba.archiveSessionService=noSessionArchive

simba.eventTopic.name=SimbaEventTopic

simba.manager.authorization.chain.name=managerAuthorizationChain
simba.url=http://localhost:8080/simba
simba.web.url=http://localhost:8080/simba